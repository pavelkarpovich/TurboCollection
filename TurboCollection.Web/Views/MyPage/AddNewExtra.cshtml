@model TurboCollection.Web.ViewModels.ExtraTurboItemEditViewModel
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = "AddNewExtra";
}

<h3>@Localizer["Add New Extra"]</h3>
<hr />
<div class="row">
    <div class="col-md-4">
        <form enctype="multipart/form-data"  asp-action="AddNewExtra">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label data-title="Category">
                            <select asp-for="CollectionId" asp-items="@Model.Collections"></select>
                            </label>
                        </div>
                    </div>
                </div>
            <br />
            <div class="form-group">
                <label asp-for="Number" class="control-label"></label>
                <input asp-for="Number" class="form-control" />
                <span asp-validation-for="Number" class="text-danger"></span>
            </div>
            <br />
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <output>
                        </output>
                        <div class="custom-file">
                            <input asp-for="Picture" class="custom-file-input" id="customFile">
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value=@Localizer["Add New Extra"] class="btn btn-sm btn-primary rounded-0 text-uppercase" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">@Localizer["Back to List"]</a>
</div>

@section Scripts {
    @*@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}*@
    <script type="text/javascript">
        const output = document.querySelector("output");
        const input = document.querySelector("#customFile");
        let imagesArray;

        $(".custom-file-input").on("change", function () {
            var fileName = $(this).val().split("\\").pop();
        });

        input.addEventListener("change", () => {
            const file = input.files
            imagesArray = file[0]
            let image = `<div class="image">
                                                                <img style='height: 250px;' src="${URL.createObjectURL(imagesArray)}" alt="image">
                                              </div>`
            output.innerHTML = image
        })
    </script>
}
